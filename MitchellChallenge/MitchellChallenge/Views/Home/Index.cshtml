@{
    ViewBag.Title = "Vehicle";
}

@section scripts {
    <style type="text/css">
        body {
            margin: 20px;
            font-family: "Arial", "Helventica", sans-serif;
        }

        label {
            width: 80px;
            display: inline-block;
        }

        button {
            display: inline-block;
            outline: none;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            padding: .4em 1.1em .4em;
            color: #fef4e9;
            border: solid 1px #006fb9;
            background: #1276bb;
        }

            button:hover {
                text-decoration: none;
                background: #282828;
                border: solid 1px #000;
            }

        table {
            padding-top: 1em;
        }

        thead, tfoot {
            font-weight: 600;
        }

        th, td {
            padding: .1em .5em;
            text-align: left;
        }

            td li, td ul {
                margin: 0;
                padding: 0;
            }

            td li {
                display: inline;
            }

                td li::after {
                    content: ',';
                }

                td li:last-child::after {
                    content: '';
                }
    </style>
    <script src="~/Scripts/knockout-3.4.0.js"></script>
    <script src="@Url.Content("~/Scripts/knockout-3.4.0.debug.js")" type="text/javascript"></script>
    <script type="text/javascript">
        function loadVehicle() {
            var self = this;
            //Declare observable which is binding the UI
            self.Id = ko.observable("");
            self.Year = ko.observable("");
            self.Make = ko.observable("");
            self.Model = ko.observable("");

            var Vehicle = {
                Id: self.Id,
                Year: self.Year,
                Make: self.Make,
                Model: self.Model
            };

            self.Vehicle = ko.observable();
            self.Vehicles = ko.observableArray(); // Contains the list of vehicles

            // Initialize the grid
            function RefreshGrid() {
                $.ajax({
                    url: '/api/Vehicle/Get',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (data) {
                        self.Vehicles(data);
                    }
                });
            }
            RefreshGrid();

            //Validate the input
            function ValidateInput(Year, Make, Model) {
                if (parseInt(Year) > 2050 || parseInt(Year) < 1950) {
                    alert("Year is invalid, it should be between 1950 and 2050!");
                    return false;
                }
                else if ($.trim(Make).length === 0 || $.trim(Model).length === 0 || $.trim(Year).length === 0) {
                    alert("Make,Model and Year are required! ");
                    return false;
                }
                return true;
            }

            //Add New Vehicle
            self.create = function () {
                if (ValidateInput(Vehicle.Year(), Vehicle.Make(), Vehicle.Model())) {
                    $.ajax({
                        url: '/api/Vehicle/Create',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Vehicle),
                        success: function (data) {
                            self.Make("");
                            self.Model("");
                            self.Year("");
                            RefreshGrid();
                            if (data == false) {
                                alert("There was a problem adding the vehcile.Try again!")
                            }

                        }
                    }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });

                }
            }

            // Delete vehicle
            self.delete = function (Vehicle) {
                if (confirm('Are you sure to Delete "' + Vehicle.Id + '"?')) {
                    var id = Vehicle.Id;
                    $.ajax({
                        url: '/api/Vehicle/Delete/' + id,
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: id,
                        success: function (data) {
                            RefreshGrid();
                            if (data == false) {
                                alert("There was a problem deleting.Try again!")
                            }

                        }
                    }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
                }
            }

            // Edit vehicle details
            self.edit = function (Vehicle) {
                self.Vehicle(Vehicle);
                var vehiclemodify = self.Vehicle();
                self.Id(vehiclemodify.Id);
                self.Make(vehiclemodify.Make);
                self.Model(vehiclemodify.Model);
                self.Year(vehiclemodify.Year);
            }

            // Update vehicle details
            self.update = function () {
                var Vehicle = self.Vehicle();
                var id = Vehicle.Id;
                if (ValidateInput(Vehicle.Year, Vehicle.Make, Vehicle.Model)) {
                    $.ajax({
                        url: '/api/Vehicle/Update',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Vehicle),
                        success: function (data) {
                            if (data == true) {
                                self.Make("");
                                self.Model("");
                                self.Year("");
                                self.Vehicle(null);
                                RefreshGrid();
                                alert("Record Updated Successfully");
                                loadVehicle();

                            }
                            else {
                                alert("There was a problem updating.Try again!")
                            }

                        }
                    })
                    .fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
                }
            }

            // Reset vehicle
            self.reset = function () {
                self.Make("");
                self.Model("");
                self.Year("");
            }

            // Cancel vehicle details
            self.cancel = function () {
                self.Vehicle(null);

            }
        }
        var viewModel = new loadVehicle();
        ko.applyBindings(viewModel);

    </script>
}

<div id="body">


    <h4>Vehicle API Client</h4>
    <br/>
    <div class="row">
        <div class="col-sm-6">
            <table id="vehicles" data-bind="visible: Vehicles().length > 0">
                <text>List of Vehicles</text>
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Make</th>
                        <th>Model</th>
                        <th>Year</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: Vehicles">
                    <tr>
                        <td data-bind="text: Id"></td>
                        <td data-bind="text: Make"></td>
                        <td data-bind="text: Model"></td>
                        <td data-bind="text: Year"></td>

                        <td>
                            <button type="button" class="btn btn-default" data-bind="click: $root.edit">
                                <span class="glyphicon glyphicon-pencil" />
                            </button>
                            <button type="button" class="btn btn-default" data-bind="click: $root.delete">
                                <span class="glyphicon glyphicon-trash" />
                            </button>

                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
        <br />
        <div data-bind="ifnot: Vehicle()" id="AddGrid">
            <div class="col-sm-3">
                <div>
                    <h2>Add New Vehicle</h2>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label" for="make">Make</label>
                    <input class="form-control" data-bind="value: $root.Make" type="text" title="Make" name="make" required />
                    <div class="col-xs-5 messageContainer"></div>
                </div>

                <div class="form-group">
                    <label class="col-sm-1 control-label" for="model">Model</label>
                    <input class="form-control" data-bind="value: $root.Model" type="text" title="Model" name="model" />
                </div>

                <div class="form-group">
                    <label class="col-sm-1 control-label" for="year">Year</label>
                    <input type="number" data-bind="value: $root.Year" min="1950" max="2050" class=" form-control">
                    @*<input class ="form-control"   data-bind="value: $root.Year" type="text" title="Year" />*@

                </div>
                <br />
                <div>
                    <button class="btn btn-primary" data-bind="click: $root.create">Save</button>
                    <button class="btn btn-primary" data-bind="click: $root.reset">Reset</button>

                </div>
            </div>
        </div>
        @*<div style="border-top: solid 2px #1276bb; width: 430px; height: 10px"> </div>*@
        <div class="col-sm-3" id="UpdateGrid">
            <div data-bind="if: Vehicle">
                <div>
                    <h2>Update Vehicle</h2>
                </div>
                <div class="form-group">
                    <label for="vehicleId" data-bind="visible: false">ID</label>
                    <label data-bind="text: Vehicle().Id, visible: false"></label>

                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label" for="Make">Make</label>
                    <input class="form-control" data-bind="value: Vehicle().Make" type="text" title="Make" />
                </div>

                <div class="form-group">
                    <label class="col-sm-1 control-label" for="Model">Model</label>
                    <input class="form-control" data-bind="value: Vehicle().Model" type="text" title="Model" />
                </div>

                <div class="form-group">
                    <label class="col-sm-1 control-label" for="Year">Year</label>
                    @* <input class="form-control" data-bind="value: Vehicle().Year" type="text" title="Year" />*@
                    <input type="number" data-bind="value: Vehicle().Year" min="1950" max="2050" class="form-control" style="">
                </div>
                <br />
                <div>
                    <button class="btn btn-primary" data-bind="click: $root.update">Update</button>
                    <button class="btn btn-primary" data-bind="click: $root.cancel">Cancel</button>

                </div>
            </div>
        </div>

    </div>
</div>